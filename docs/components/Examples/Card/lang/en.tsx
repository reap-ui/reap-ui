import * as React from "react";

export default {
    compDesc: "A card is a flexible and extensible content container. It includes options for headers and footers, a wide variety of content, contextual background colors, and powerful display options.",
    basicTitle: "Basic Example",
    basicDesc: <>Cards are built with as little markup and styles as possible, but still manage to deliver a ton of control and customization. Built with flexbox, they offer easy alignment and mix well with other Bootstrap components. They have no margin by default, so use <a href="https://getbootstrap.com//docs/4.4/utilities/spacing/">spacing utilities</a> as needed.</>,
    ctTitle: "Content types",
    ctDesc: "Cards support a wide variety of content, including images, text, list groups, links, and more. Below are examples of what’s supported.",
    bodyTitle: "Body",
    bodyDesc: <>Use <code>Card.Body</code> to pad content inside a <code>Card</code>. Use it whenever you need a padded section within a card.</>,
    or: "or",
    lgTitle: "List group",
    ttlTitle: "Titles, text, and links",
    ttlDesc: "Create lists of content in a card with a flush list group.",
    ksTitle: "Kitchen sink",
    ksDesc: "Mix and match multiple content types to create the card you need, or throw everything in there. Shown below are image styles, blocks, text styles, and a list group—all wrapped in a fixed-width card.",
    hafTitle: "Header and footer",
    imgTitle: "images",
    icTitle: "Image cap",
    ioTitle: "Image overlay",
    ioDesc: "Turn an image into a card background and overlay your card’s text. Depending on the image, you may or may not need additional styles or utilities.",
    layoutTitle: "Card layout",
    groupTitle: "Card groups",
    groupDesc: <>Use card groups to render cards as a single, attached element with equal width and height columns. Card groups use <code>display: flex;</code> to achieve their uniform sizing.</>,
    deckTitle: "Card decks",
    deckDesc: "Need a set of equal width and height cards that aren’t attached to one another? Use card decks.",
    gridTitle: "Grid cards",
    gridDesc: <>Use the Bootstrap grid system and its <code>cols</code> prop of <code>Row</code> to control how many grid columns (wrapped around your cards) you show per row. ( Add <code>.h-100</code> to the cards for equal height.)</>,
    columnTitle: "Card columns",
    columnDesc: <>Cards can be organized into Masonry-like columns with just CSS by wrapping them in <code>Card.Columns</code>. Cards are built with CSS column properties instead of flexbox for easier alignment. Cards are ordered from top to bottom and left to right.</>,
    headerApi: "Card header",
    footerApi: "Card footer",
    bodyApi: <>Wrap the children with <code>Card.Body</code>. If <code>isImgOverlay</code> is <code>true</code>, this prop will be ignored.</>,
    imgApi: "Card image",
    imgAltApi: "Alt attribute for the underlying img element",
    imgTitleApi: "Title attribute for the underlying img element",
    imgPisApi: "Position of card image",
    overlayApi: "Turn an image into a card background and overlay your card’s text",
    alignmentApi: "Text alignment",
    bgApi: "Background color of card",
    borderApi: "Border color of card",
    colorApi: "Text color of card",
    sameAs: <>Same as <code>Card</code> <code>color</code> prop</>,
    titleColorApi: "Title color",
    subTitleColorApi: "Subtitle color"
}