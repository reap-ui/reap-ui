import * as React from "react"

export default {
    compDesc: "Add dialogs to your site for lightboxes, user notifications, or completely custom content.",
    basicTitle: "Basic example",
    basicDesc: "Toggle a working modal demo by clicking the button below. It will slide down and fade in from the top of the page.",
    staticTitle: "Static backdrop",
    staticDesc: "When backdrop is set to static, the modal will not close when clicking outside it. Click the button below to try it.",
    scrollingTitle: "Scrolling long content",
    scrollingDesc: "When modals become too long for the userâ€™s viewport or device, they scroll independent of the page itself. Try the demo below to see what we mean.",
    scrollingDesc2: "You can also create a scrollable modal that allows scroll the modal body by setting <code>scrollable</code> prop.",
    verticalTitle: "Vertically centered",
    verticalDesc: <>Set <code>centered</code> prop to vertically center the modal.</>,
    tapTitle: "Tooltips and popovers",
    tapDesc: <><code>Tooltip</code> and <code>Popover</code> can be placed within modals as needed. When modals are closed, any tooltips and popovers within are also automatically dismissed.</>,
    noAnimTitle: "Without animation",
    noAnimDesc: <>For modals that simply appear rather than fade in to view, set <code>fade</code> to false</>,
    sizeTitle: "Optional sizes",
    sizeDesc: <>Modals have three optional sizes, available via <code>size</code> prop (<code>xl | lg | sm</code>).</>,
    visibleApi: "Visibility of the modal",
    titleApi: "Title text of the modal",
    closableApi: "Show close button on the header",
    showOkApi: "Show ok button on the footer",
    showCancelApi: "Show cancel button on the footer",
    okTextApi: "Text of ok button",
    cancelTextApi: "Text of cancel button",
    okTypeApi: "Variant of ok button",
    cancelType: "Variant of cancel button",
    keyboardApi: "Enable close the modal by pressing esc key",
    forceRenderApi: "If true will render the modal once mounted, otherwise will render it when visible is true",
    fadeApi: "Enable fade animation when the modal is opening or closing",
    centeredApi: "Center the modal vertically",
    sizeAPi: "Size of the modal",
    autoFocusApi: "Puts the focus on the modal when shown",
    scrollableApi: "Allow scroll the modal body",
    backdropApi: <>Includes a modal-backdrop element. Alternatively, specify <code>static</code> for a backdrop which doesn't close the modal on click</>,
    headerApi: <>Customize the header, if <code>null</code> will not render the header</>,
    footerApi: <>Customize the footer, if <code>null</code> will not render the footer</>,
    onOkApi: "Callback is invoked when ok button is clicked",
    onCancelApi: "Callback is invoked when cancel button or close button is clicked",
    onShowApi: <>Callback is invoked when <code>visible</code> changes from <code>false</code> to <code>true</code></>,
    onShownApi: "Callback is invoked when the modal has been shown",
    onHideApi: <>Callback is invoked when <code>visible</code> changes from <code>true</code> to <code>false</code></>,
    onHiddenApi: "Callback is invoked when the modal has been hidden"
}